// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Router render correctly 1`] = `
<Component>
  <HashRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Switch>
        <Route
          component={[Function]}
          computedMatch={
            Object {
              "isExact": true,
              "params": Object {},
              "path": "/",
              "url": "/",
            }
          }
          exact={true}
          location={
            Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            }
          }
          path="/"
        >
          <Component
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            location={
              Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              }
            }
            match={
              Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
          >
            <div
              className="container-demo"
            >
              <DataController
                menuId={1392}
                tableId={10874}
              >
                <div
                  className="DataController"
                >
                  <ContainerCore
                    config={Array []}
                    dataSource={Array []}
                    formatControls={[Function]}
                    loading={true}
                    menuId={1392}
                    onDelete={[Function]}
                    onMapPickerChange={[Function]}
                    onSearch={[Function]}
                    onSort={[Function]}
                    power={
                      Object {
                        "add": false,
                        "delete": false,
                        "select": false,
                        "update": false,
                      }
                    }
                    primaryKey=""
                    tableId={10874}
                    total={0}
                    updatePageChange={[Function]}
                    updatePageForm={Array []}
                    updatePageMapBoxItem={
                      Object {
                        "key": "key",
                        "lat": "-1",
                        "lng": "-1",
                      }
                    }
                    updatePageSave={[Function]}
                  >
                    <div
                      className="Container-core"
                    >
                      <TransformManager
                        currentGroup="list-page"
                        currentOrder={0}
                      >
                        <div
                          className="TransformManager"
                        >
                          <div
                            className="Transform-item"
                            group="list-page"
                            key="list-page-0"
                            style={
                              Object {
                                "transform": "translate3d(0%, 0, 0)",
                              }
                            }
                          >
                            <SearchBar
                              dataSource={Array []}
                              onVisibleChange={[Function]}
                              visible={false}
                            >
                              <Drawer
                                enableDragHandle={false}
                                onOpenChange={[Function]}
                                open={false}
                                overlayStyle={
                                  Object {
                                    "backgroundColor": "transpent",
                                  }
                                }
                                position="left"
                                prefixCls="am-drawer"
                                sidebar={
                                  <List
                                    prefixCls="am-list"
                                    renderHeader={
                                      <span
                                        style={
                                          Object {
                                            "fontSize": 17,
                                          }
                                        }
                                      >
                                        搜索面板
                                      </span>
                                    }
                                  >
                                    <ListItem
                                      align="middle"
                                      error={false}
                                      multipleLine={false}
                                      platform="ios"
                                      prefixCls="am-list"
                                      wrap={false}
                                    />
                                    <ListItem
                                      align="middle"
                                      error={false}
                                      multipleLine={false}
                                      platform="ios"
                                      prefixCls="am-list"
                                      wrap={false}
                                    >
                                      <Button
                                        activeStyle={Object {}}
                                        disabled={false}
                                        inline={false}
                                        loading={false}
                                        prefixCls="am-button"
                                        size="large"
                                        type="primary"
                                      >
                                        确定
                                      </Button>
                                    </ListItem>
                                  </List>
                                }
                                sidebarStyle={
                                  Object {
                                    "background": "#fff",
                                    "width": "77%",
                                  }
                                }
                                style={
                                  Object {
                                    "minHeight": 0,
                                  }
                                }
                              >
                                <Drawer
                                  contentStyle={Object {}}
                                  docked={false}
                                  dragHandleStyle={Object {}}
                                  dragToggleDistance={30}
                                  enableDragHandle={false}
                                  onOpenChange={[Function]}
                                  open={false}
                                  overlayStyle={
                                    Object {
                                      "backgroundColor": "transpent",
                                    }
                                  }
                                  position="left"
                                  prefixCls="am-drawer"
                                  sidebar={
                                    <List
                                      prefixCls="am-list"
                                      renderHeader={
                                        <span
                                          style={
                                            Object {
                                              "fontSize": 17,
                                            }
                                          }
                                        >
                                          搜索面板
                                        </span>
                                      }
                                    >
                                      <ListItem
                                        align="middle"
                                        error={false}
                                        multipleLine={false}
                                        platform="ios"
                                        prefixCls="am-list"
                                        wrap={false}
                                      />
                                      <ListItem
                                        align="middle"
                                        error={false}
                                        multipleLine={false}
                                        platform="ios"
                                        prefixCls="am-list"
                                        wrap={false}
                                      >
                                        <Button
                                          activeStyle={Object {}}
                                          disabled={false}
                                          inline={false}
                                          loading={false}
                                          prefixCls="am-button"
                                          size="large"
                                          type="primary"
                                        >
                                          确定
                                        </Button>
                                      </ListItem>
                                    </List>
                                  }
                                  sidebarStyle={
                                    Object {
                                      "background": "#fff",
                                      "width": "77%",
                                    }
                                  }
                                  style={
                                    Object {
                                      "minHeight": 0,
                                    }
                                  }
                                  touch={true}
                                  transitions={true}
                                >
                                  <div
                                    className="am-drawer am-drawer-left"
                                    style={
                                      Object {
                                        "minHeight": 0,
                                      }
                                    }
                                  >
                                    <div
                                      className="am-drawer-sidebar"
                                      style={
                                        Object {
                                          "background": "#fff",
                                          "width": "77%",
                                        }
                                      }
                                    >
                                      <List
                                        prefixCls="am-list"
                                        renderHeader={
                                          <span
                                            style={
                                              Object {
                                                "fontSize": 17,
                                              }
                                            }
                                          >
                                            搜索面板
                                          </span>
                                        }
                                      >
                                        <div
                                          className="am-list"
                                        >
                                          <div
                                            className="am-list-header"
                                          >
                                            <span
                                              style={
                                                Object {
                                                  "fontSize": 17,
                                                }
                                              }
                                            >
                                              搜索面板
                                            </span>
                                          </div>
                                          <div
                                            className="am-list-body"
                                          >
                                            <ListItem
                                              align="middle"
                                              error={false}
                                              multipleLine={false}
                                              platform="ios"
                                              prefixCls="am-list"
                                              wrap={false}
                                            >
                                              <TouchFeedback
                                                activeClassName="am-list-item-active"
                                                disabled={true}
                                              >
                                                <div
                                                  className="am-list-item am-list-item-middle"
                                                  onClick={[Function]}
                                                >
                                                  <div
                                                    className="am-list-line"
                                                  >
                                                    <div
                                                      className="am-list-content"
                                                    />
                                                  </div>
                                                  <div
                                                    className="am-list-ripple"
                                                    style={
                                                      Object {
                                                        "display": "none",
                                                      }
                                                    }
                                                  />
                                                </div>
                                              </TouchFeedback>
                                            </ListItem>
                                            <ListItem
                                              align="middle"
                                              error={false}
                                              multipleLine={false}
                                              platform="ios"
                                              prefixCls="am-list"
                                              wrap={false}
                                            >
                                              <TouchFeedback
                                                activeClassName="am-list-item-active"
                                                disabled={true}
                                              >
                                                <div
                                                  className="am-list-item am-list-item-middle"
                                                  onClick={[Function]}
                                                >
                                                  <div
                                                    className="am-list-line"
                                                  >
                                                    <div
                                                      className="am-list-content"
                                                    >
                                                      <Button
                                                        activeStyle={Object {}}
                                                        disabled={false}
                                                        inline={false}
                                                        loading={false}
                                                        prefixCls="am-button"
                                                        size="large"
                                                        type="primary"
                                                      >
                                                        <TouchFeedback
                                                          activeClassName="am-button-active"
                                                          activeStyle={Object {}}
                                                          disabled={false}
                                                        >
                                                          <a
                                                            aria-disabled={false}
                                                            className="am-button am-button-primary"
                                                            onMouseDown={[Function]}
                                                            onMouseLeave={[Function]}
                                                            onMouseUp={[Function]}
                                                            onTouchCancel={[Function]}
                                                            onTouchEnd={[Function]}
                                                            onTouchMove={[Function]}
                                                            onTouchStart={[Function]}
                                                            role="button"
                                                          >
                                                            <span
                                                              key=".0"
                                                            >
                                                              确 定
                                                            </span>
                                                          </a>
                                                        </TouchFeedback>
                                                      </Button>
                                                    </div>
                                                  </div>
                                                  <div
                                                    className="am-list-ripple"
                                                    style={
                                                      Object {
                                                        "display": "none",
                                                      }
                                                    }
                                                  />
                                                </div>
                                              </TouchFeedback>
                                            </ListItem>
                                          </div>
                                        </div>
                                      </List>
                                    </div>
                                    <div
                                      className="am-drawer-overlay"
                                      onClick={[Function]}
                                      role="presentation"
                                      style={
                                        Object {
                                          "backgroundColor": "transpent",
                                        }
                                      }
                                    />
                                    <div
                                      className="am-drawer-content"
                                      style={Object {}}
                                    >
                                      <Swiper
                                        loading={true}
                                        onLoad={[Function]}
                                        wrapperHeight={0}
                                      >
                                        <div
                                          className="Swiper"
                                        >
                                          <div
                                            className="wrapper"
                                          >
                                            <div
                                              style={
                                                Object {
                                                  "height": 0,
                                                  "transform": "translate3d(0px, 0px, 0)",
                                                }
                                              }
                                            >
                                              <div
                                                className="sc-content"
                                              >
                                                <Template
                                                  dataSource={Array []}
                                                  onClick={[Function]}
                                                  onDataFormat={[Function]}
                                                  onPress={[Function]}
                                                  template={
                                                    <ul>
                                                      <li>
                                                        <div
                                                          className="left"
                                                        >
                                                          <label>
                                                            名称：
                                                          </label>
                                                          <label
                                                            data-key="pjnm"
                                                          />
                                                        </div>
                                                        <div
                                                          className="right"
                                                        >
                                                          <label>
                                                            坝高：
                                                          </label>
                                                          <label
                                                            data-key="dam_width"
                                                          />
                                                        </div>
                                                      </li>
                                                      <li>
                                                        <div
                                                          className="left"
                                                        >
                                                          <label>
                                                            坝长：
                                                          </label>
                                                          <label
                                                            data-key="crest_length"
                                                          />
                                                        </div>
                                                        <div
                                                          className="right"
                                                        >
                                                          <label>
                                                            主坝类型：
                                                          </label>
                                                          <label
                                                            data-key="retain_dam_type"
                                                          />
                                                        </div>
                                                      </li>
                                                    </ul>
                                                  }
                                                >
                                                  <div
                                                    className="Template"
                                                  >
                                                    <img
                                                      src="./assets/nodata.png"
                                                      style={
                                                        Object {
                                                          "width": "100%",
                                                        }
                                                      }
                                                    />
                                                  </div>
                                                </Template>
                                              </div>
                                            </div>
                                            <div
                                              className="load"
                                              style={
                                                Object {
                                                  "transform": "translate3d(0px, 0px, 0)",
                                                }
                                              }
                                            >
                                              <span
                                                className="load-icon"
                                                style={
                                                  Object {
                                                    "transform": "rotateZ(0deg)",
                                                  }
                                                }
                                              >
                                                <img
                                                  src="./assets/down.png"
                                                />
                                              </span>
                                              <span
                                                className="load-text"
                                              >
                                                加载更多
                                              </span>
                                            </div>
                                          </div>
                                        </div>
                                      </Swiper>
                                    </div>
                                  </div>
                                </Drawer>
                              </Drawer>
                              <Calendar
                                onCancel={[Function]}
                                onConfirm={[Function]}
                                pickTime={true}
                                prefixCls="am-calendar"
                                timePickerPickerPrefixCls="am-picker-col"
                                timePickerPrefixCls="am-picker"
                                visible={false}
                              >
                                <Calendar
                                  defaultTimeValue={2000-01-01T00:00:00.000Z}
                                  locale={
                                    Object {
                                      "am": "上午",
                                      "begin": "起",
                                      "begin_over": "起/止",
                                      "clear": "清除",
                                      "confirm": "确认",
                                      "dateFormat": "yyyy年MM月dd日 星期w",
                                      "dateTimeFormat": "yyyy年MM月dd日 星期w hh:mm",
                                      "end": "结束",
                                      "lastMonth": "近一个月",
                                      "lastWeek": "近一周",
                                      "loadPrevMonth": "加载上一个月",
                                      "month": "月",
                                      "monthTitle": "yyyy年MM月",
                                      "noChoose": "未选择",
                                      "over": "止",
                                      "pm": "下午",
                                      "selectEndTime": "选择结束时间",
                                      "selectStartTime": "选择开始时间",
                                      "selectTime": "选择时间",
                                      "start": "开始",
                                      "title": "日期选择",
                                      "today": "今天",
                                      "week": Array [
                                        "日",
                                        "一",
                                        "二",
                                        "三",
                                        "四",
                                        "五",
                                        "六",
                                      ],
                                      "year": "年",
                                      "yesterday": "昨天",
                                    }
                                  }
                                  onCancel={[Function]}
                                  onConfirm={[Function]}
                                  pickTime={true}
                                  prefixCls="am-calendar"
                                  renderHeader={[Function]}
                                  showHeader={true}
                                  showShortcut={false}
                                  timePickerPickerPrefixCls="am-picker-col"
                                  timePickerPrefixCls="am-picker"
                                  type="range"
                                  visible={false}
                                >
                                  <div
                                    className="am-calendar"
                                  >
                                    <Animate
                                      animation={Object {}}
                                      component="span"
                                      componentProps={Object {}}
                                      onAppear={[Function]}
                                      onEnd={[Function]}
                                      onEnter={[Function]}
                                      onLeave={[Function]}
                                      showProp="visible"
                                      transitionAppear={false}
                                      transitionEnter={true}
                                      transitionLeave={true}
                                      transitionName="fade"
                                    >
                                      <span>
                                        <AnimateChild
                                          animation={Object {}}
                                          key="rc_animate_1554791889838"
                                          transitionAppear={false}
                                          transitionEnter={true}
                                          transitionLeave={true}
                                          transitionName="fade"
                                        >
                                          <AnimateWrapper
                                            className="mask"
                                            displayType="flex"
                                            key="rc_animate_1554791889838"
                                            visible={false}
                                          >
                                            <div
                                              className="mask animate"
                                              style={
                                                Object {
                                                  "display": "none",
                                                }
                                              }
                                            />
                                          </AnimateWrapper>
                                        </AnimateChild>
                                      </span>
                                    </Animate>
                                    <Animate
                                      animation={Object {}}
                                      component="span"
                                      componentProps={Object {}}
                                      onAppear={[Function]}
                                      onEnd={[Function]}
                                      onEnter={[Function]}
                                      onLeave={[Function]}
                                      showProp="visible"
                                      transitionAppear={false}
                                      transitionEnter={true}
                                      transitionLeave={true}
                                      transitionName="slideV"
                                    >
                                      <span>
                                        <AnimateChild
                                          animation={Object {}}
                                          key="rc_animate_1554791889838"
                                          transitionAppear={false}
                                          transitionEnter={true}
                                          transitionLeave={true}
                                          transitionName="slideV"
                                        >
                                          <AnimateWrapper
                                            className="content"
                                            displayType="flex"
                                            key="rc_animate_1554791889838"
                                            visible={false}
                                          >
                                            <div
                                              className="content animate"
                                              style={
                                                Object {
                                                  "display": "none",
                                                }
                                              }
                                            />
                                          </AnimateWrapper>
                                        </AnimateChild>
                                      </span>
                                    </Animate>
                                  </div>
                                </Calendar>
                              </Calendar>
                            </SearchBar>
                          </div>
                        </div>
                      </TransformManager>
                      <FunctionalButton
                        dataSource={Array []}
                        onSort={[Function]}
                        sortBy={Array []}
                      >
                        <div
                          className="FunctionalButton"
                        >
                          <div
                            className="sc-extend-add"
                            onClick={[Function]}
                          >
                            <i
                              className="sc-extend-add-icon"
                            >
                              +
                            </i>
                          </div>
                          <Modal
                            animated={true}
                            animationType="slide-up"
                            closable={false}
                            footer={Array []}
                            onClose={[Function]}
                            onShow={[Function]}
                            operation={false}
                            platform="ios"
                            popup={true}
                            prefixCls="am-modal"
                            style={Object {}}
                            transparent={false}
                            visible={false}
                          >
                            <DialogWrap
                              className="am-modal-popup am-modal-popup-slide-up"
                              closable={false}
                              footer={null}
                              maskTransitionName="am-fade"
                              onClose={[Function]}
                              onShow={[Function]}
                              prefixCls="am-modal"
                              style={Object {}}
                              transitionName="am-slide-up"
                              visible={false}
                              wrapClassName="am-modal-wrap-popup"
                            />
                          </Modal>
                        </div>
                      </FunctionalButton>
                      <ActivityIndicator
                        animating={true}
                        panelColor="rgba(34,34,34,0.6)"
                        prefixCls="am-activity-indicator"
                        size="large"
                        text="正在加载..."
                        toast={true}
                      >
                        <div
                          className="am-activity-indicator am-activity-indicator-lg am-activity-indicator-toast"
                        >
                          <div
                            className="am-activity-indicator-content"
                          >
                            <span
                              aria-hidden="true"
                              className="am-activity-indicator-spinner am-activity-indicator-spinner-lg"
                            />
                            <span
                              className="am-activity-indicator-toast"
                            >
                              正在加载...
                            </span>
                          </div>
                        </div>
                      </ActivityIndicator>
                    </div>
                  </ContainerCore>
                </div>
              </DataController>
            </div>
          </Component>
        </Route>
      </Switch>
    </Router>
  </HashRouter>
</Component>
`;
